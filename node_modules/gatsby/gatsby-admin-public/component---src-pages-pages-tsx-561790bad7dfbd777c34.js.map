{"version":3,"sources":["webpack://gatsby-admin/./src/pages/pages.tsx","webpack://gatsby-admin/../src/components/BaseHeading/BaseHeading.tsx","webpack://gatsby-admin/../src/components/Heading/Heading.tsx","webpack://gatsby-admin/../src/utils/maintenance/deprecationMessages.ts","webpack://gatsby-admin/../src/utils/maintenance/warn.ts"],"names":["useQuery","query","data","fetching","error","errMsg","networkError","message","Array","isArray","graphQLErrors","map","e","join","gap","flexDirection","sx","paddingY","paddingX","as","fontWeight","fontSize","pl","listStyle","allGatsbyPage","nodes","filter","page","path","indexOf","sort","a","b","localeCompare","key","p","backgroundColor","padding","borderRadius","color","pluginCreator","name","BaseHeading","props","rest","baseCss","theme","margin","lineHeight","fontVariantCss","DISPLAY","fontFamily","heading","UI","headingUI","modifiedCss","text","variant","bold","extraBold","textTransform","Heading","customCss","showCustomCssDeprecationMessage","css"],"mappings":"mLAmEA,UA7DA,WACE,OAAoCA,QAAS,CAC3CC,MAAM,mLADR,GAASC,EAAT,EAASA,KAAMC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MAezB,GAAID,EAAU,OAAO,QAAC,KAAD,MAErB,GAAIC,EAAO,CACT,IAAMC,EACHD,EAAME,cAAgBF,EAAME,aAAaC,SACzCC,MAAMC,QAAQL,EAAMM,gBACnBN,EAAMM,cAAcC,KAAI,SAAAC,GAAC,OAAIA,EAAEL,WAASM,KAAxC,OAEJ,OAAO,2BAAWR,GAGpB,OACE,QAAC,KAAD,CAAMS,IAAK,EAAGC,cAAc,SAASC,GAAI,CAAEC,SAAU,EAAGC,SAAU,KAChE,QAAC,KAAD,CAAMJ,IAAK,EAAGC,cAAc,WAC1B,QAAC,IAAD,CAASI,GAAG,KAAKH,GAAI,CAAEI,WAAW,MAAQC,SAAU,IAApD,UAGA,cAAIL,GAAI,CAAEM,GAAI,EAAGC,UAAU,SACxBrB,EAAKsB,cAAcC,MACjBC,QAAO,SAAAC,GAAI,OAA4C,IAAxCA,EAAKC,KAAKC,QAAV,qBACfC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,KAAKK,cAAcD,EAAEJ,SACtCjB,KAAI,SAAAgB,GAAI,OACP,cAAIO,IAAKP,EAAKC,KAAMZ,GAAI,CAAEmB,EAAG,KAC3B,QAAC,KAAD,CACEpB,cAAc,SACdD,IAAK,EACLE,GAAI,CACFoB,gBAAgB,gBAChBC,QAAS,EACTC,aAAc,KAGhB,QAAC,IAAD,CAASnB,GAAG,MAAMQ,EAAKC,OACvB,QAAC,IAAD,CAAMZ,GAAI,CAAEuB,MAAM,mBAAlB,WACWZ,EAAKa,cAAcC,gB,+IC/CzC,SAASC,EAAYC,GAC1B,IAAM,EAAN,EAAM,SAAN,IAAkBxB,GAAZ,OAAN,aAA2CyB,GAA3C,YAEA,OAAO,sCAAeA,GAAtB,G,aANAzB,cAHe,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,U,wDCIrD0B,EAAoBC,YAAK,MAAK,CAClCC,OADkC,EAElCC,WAAYF,cAFsB,UAK9BG,EAAuD,CAC3DC,QAASJ,YAAK,MAAK,CACjBK,WAAYL,QAAYM,UAE1BC,GAAIP,YAAK,MAAK,CACZK,WAAYL,QAAYQ,aAItBC,EAAwE,SAAC,EAAD,UAGzET,YAAK,MAAI,CACZ,CACEP,MAAOO,WAAkBU,MAE3BC,eAAyB,CACvBrC,WAAY0B,cAAkBY,MAEhCD,kBAA4B,CAC1BrC,WAAY0B,cAAkBa,WAEhCF,aAAuB,CACrBrC,WADqB,IAErBwC,cAAc,gBAWX,SAASC,EAAQ,GAON,IAAD,IAPO,YAOP,sBAPO,eAOP,sBAPO,mBAOP,sBAPO,UAOP,aAPO,EAOP,EAPO,UAMnBjB,GACY,YAGf,OCvDK,SAAyCkB,GCFzC,WDGL,IAAIA,QCHwE,IAAvE,MAAuE,WFuD5EC,KAGE,yBACE5C,GADF,EAEE6C,IAAMlB,YAAD,MAAkB,CACrBD,EADqB,GAErBU,EAAYE,EAAZF,GAFqB,GAGrBN,KAHqB,GAFzB,KAQML","file":"component---src-pages-pages-tsx-561790bad7dfbd777c34.js","sourcesContent":["/* @jsx jsx */\nimport { jsx, Flex } from \"strict-ui\"\nimport { useQuery } from \"urql\"\nimport { Spinner } from \"theme-ui\"\nimport { Heading, Text } from \"gatsby-interface\"\n\nfunction Pages(): JSX.Element {\n  const [{ data, fetching, error }] = useQuery({\n    query: `\n      {\n        allGatsbyPage {\n          nodes {\n            path\n            pluginCreator {\n              name\n            }\n          }\n        }\n      }\n    `,\n  })\n\n  if (fetching) return <Spinner />\n\n  if (error) {\n    const errMsg =\n      (error.networkError && error.networkError.message) ||\n      (Array.isArray(error.graphQLErrors) &&\n        error.graphQLErrors.map(e => e.message).join(` | `))\n\n    return <p>Error: {errMsg}</p>\n  }\n\n  return (\n    <Flex gap={8} flexDirection=\"column\" sx={{ paddingY: 7, paddingX: 6 }}>\n      <Flex gap={6} flexDirection=\"column\">\n        <Heading as=\"h1\" sx={{ fontWeight: `500`, fontSize: 5 }}>\n          Pages\n        </Heading>\n        <ul sx={{ pl: 0, listStyle: `none` }}>\n          {data.allGatsbyPage.nodes\n            .filter(page => page.path.indexOf(`/dev-404-page/`) !== 0)\n            .sort((a, b) => a.path.localeCompare(b.path))\n            .map(page => (\n              <li key={page.path} sx={{ p: 0 }}>\n                <Flex\n                  flexDirection=\"column\"\n                  gap={3}\n                  sx={{\n                    backgroundColor: `ui.background`,\n                    padding: 5,\n                    borderRadius: 2,\n                  }}\n                >\n                  <Heading as=\"h3\">{page.path}</Heading>\n                  <Text sx={{ color: `text.secondary` }}>\n                    Source: {page.pluginCreator.name}\n                  </Text>\n                </Flex>\n              </li>\n            ))}\n        </ul>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Pages\n","import * as React from \"react\"\nimport { PropsOf } from \"../../utils/types\"\n\ntype AllowedAs = \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"span\"\n\nexport type BaseHeadingProps = Omit<PropsOf<AllowedAs>, \"ref\"> & {\n  as?: AllowedAs\n}\n\nexport function BaseHeading(props: BaseHeadingProps) {\n  const { children, as: Component = `h1`, ...rest } = props\n\n  return <Component {...rest}>{children}</Component>\n}\n","/** @jsx jsx */\nimport { jsx, Interpolation } from \"@emotion/core\"\nimport { BaseHeading, BaseHeadingProps } from \"../BaseHeading\"\nimport { showCustomCssDeprecationMessage } from \"../../utils/maintenance/deprecationMessages\"\nimport { ThemeCss, Theme } from \"../../theme\"\nimport { HeadingTone, HeadingVariant, HeadingFontVariant } from \"./types\"\n\nconst baseCss: ThemeCss = theme => ({\n  margin: 0,\n  lineHeight: theme.lineHeights.heading, // Ask Flo about this\n})\n\nconst fontVariantCss: Record<HeadingFontVariant, ThemeCss> = {\n  DISPLAY: theme => ({\n    fontFamily: theme.fonts.heading,\n  }),\n  UI: theme => ({\n    fontFamily: theme.fonts.headingUI,\n  }),\n}\n\nconst modifiedCss: (variant: HeadingVariant, tone: HeadingTone) => ThemeCss = (\n  variant,\n  tone\n) => theme => [\n  {\n    color: theme.tones[tone].text,\n  },\n  variant === `PRIMARY` && {\n    fontWeight: theme.fontWeights.bold,\n  },\n  variant === `EMPHASIZED` && {\n    fontWeight: theme.fontWeights.extraBold,\n  },\n  variant === `LIGHT` && {\n    fontWeight: 100,\n    textTransform: `uppercase`,\n  },\n]\n\nexport type HeadingProps = BaseHeadingProps & {\n  tone?: HeadingTone\n  variant?: HeadingVariant\n  fontVariant?: HeadingFontVariant\n  customCss?: Interpolation\n}\n\nexport function Heading({\n  tone = `NEUTRAL`,\n  variant = `PRIMARY`,\n  fontVariant = `DISPLAY`,\n  as = `h2`,\n  customCss,\n  ...rest\n}: HeadingProps) {\n  showCustomCssDeprecationMessage(customCss)\n\n  return (\n    <BaseHeading\n      as={as}\n      css={(theme: Theme) => [\n        baseCss(theme),\n        modifiedCss(variant, tone)(theme),\n        fontVariantCss[fontVariant](theme),\n        customCss,\n      ]}\n      {...rest}\n    />\n  )\n}\n","import { warn } from \"./warn\"\n\nexport function showCustomCssDeprecationMessage(customCss: any) {\n  if (customCss === undefined) {\n    return\n  }\n  warn(\n    `Styling components via \"customCss\" prop is deprecated, please use Emotion \"css\" prop or pass a \"className\"`\n  )\n}\n","export function warn(message: string, level: `warning` | `error` = `warning`) {\n  if (process.env.NODE_ENV === `development`) {\n    if (level === `error`) {\n      console.error(message)\n    } else {\n      console.warn(message)\n    }\n  }\n}\n"],"sourceRoot":""}