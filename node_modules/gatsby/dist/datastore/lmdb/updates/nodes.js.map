{"version":3,"sources":["../../../../src/datastore/lmdb/updates/nodes.ts"],"names":["updateNodes","nodesDb","action","type","put","payload","id","remove"],"mappings":";;;;;AAKO,SAASA,WAAT,CACLC,OADK,EAELC,MAFK,EAGuB;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,aAAN;AACA,SAAM,mBAAN;AACA,SAAM,+BAAN;AAAsC;AACpC,eAAOF,OAAO,CAACG,GAAR,CAAYF,MAAM,CAACG,OAAP,CAAeC,EAA3B,EAA+BJ,MAAM,CAACG,OAAtC,CAAP;AACD;;AACD,SAAM,aAAN;AAAoB;AAClB,YAAIH,MAAM,CAACG,OAAX,EAAoB;AAClB,iBAAOJ,OAAO,CAACM,MAAR,CAAeL,MAAM,CAACG,OAAP,CAAeC,EAA9B,CAAP;AACD;;AACD,eAAO,KAAP;AACD;AAXH;;AAaA,SAAO,KAAP;AACD","sourcesContent":["import { ActionsUnion, IGatsbyNode } from \"../../../redux/types\"\nimport { Database } from \"lmdb-store\"\n\ntype NodeId = string\n\nexport function updateNodes(\n  nodesDb: Database<IGatsbyNode, NodeId>,\n  action: ActionsUnion\n): Promise<boolean> | boolean {\n  switch (action.type) {\n    case `CREATE_NODE`:\n    case `ADD_FIELD_TO_NODE`:\n    case `ADD_CHILD_NODE_TO_PARENT_NODE`: {\n      return nodesDb.put(action.payload.id, action.payload)\n    }\n    case `DELETE_NODE`: {\n      if (action.payload) {\n        return nodesDb.remove(action.payload.id)\n      }\n      return false\n    }\n  }\n  return false\n}\n"],"file":"nodes.js"}