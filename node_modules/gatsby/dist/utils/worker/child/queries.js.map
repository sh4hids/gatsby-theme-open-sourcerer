{"version":3,"sources":["../../../../src/utils/worker/child/queries.ts"],"names":["setQueries","runQueries","queryIds","workerStore","store","getState","schemaCustomization","composer","graphqlRunner","GraphQLRunner","collectStats","graphqlTracing","program","ready"],"mappings":";;;;;;AAAA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAEO,SAASA,UAAT,GAA4B;AACjC,uBAAS,CAAE,YAAF,EAAgB,uBAAhB,CAAT;AACD;;AAEM,eAAeC,UAAf,CAA0BC,QAA1B,EAAqE;AAC1E,QAAMC,WAAW,GAAGC,aAAMC,QAAN,EAApB,CAD0E,CAG1E;;;AACA,MAAIF,WAAW,CAACG,mBAAZ,CAAgCC,QAAhC,KAA6C,IAAjD,EAAuD;AACrD,UAAM,0BAAN;AACD;;AAEDP,EAAAA,UAAU;AAEV,QAAMQ,aAAa,GAAG,IAAIC,4BAAJ,CAAkBL,YAAlB,EAAyB;AAC7CM,IAAAA,YAAY,EAAE,IAD+B;AAE7CC,IAAAA,cAAc,EAAER,WAAW,CAACS,OAAZ,CAAoBD;AAFS,GAAzB,CAAtB;AAKA,QAAM,gCAAiB;AACrBT,IAAAA,QADqB;AAErBE,IAAAA,KAAK,EAALA,YAFqB;AAGrBI,IAAAA;AAHqB,GAAjB,CAAN;AAMA,QAAM,8BAAe;AACnBN,IAAAA,QADmB;AAEnBE,IAAAA,KAAK,EAALA,YAFmB;AAGnBI,IAAAA;AAHmB,GAAf,CAAN;AAMA,QAAM,+BAAeK,KAAf,EAAN;AACD","sourcesContent":["import {\n  IGroupedQueryIds,\n  runPageQueries,\n  runStaticQueries,\n} from \"../../../services\"\nimport { store } from \"../../../redux\"\nimport { GraphQLRunner } from \"../../../query/graphql-runner\"\nimport { getDataStore } from \"../../../datastore\"\nimport { setState } from \"./state\"\nimport { buildSchema } from \"./schema\"\n\nexport function setQueries(): void {\n  setState([`components`, `staticQueryComponents`])\n}\n\nexport async function runQueries(queryIds: IGroupedQueryIds): Promise<void> {\n  const workerStore = store.getState()\n\n  // If buildSchema() didn't run yet, execute it\n  if (workerStore.schemaCustomization.composer === null) {\n    await buildSchema()\n  }\n\n  setQueries()\n\n  const graphqlRunner = new GraphQLRunner(store, {\n    collectStats: true,\n    graphqlTracing: workerStore.program.graphqlTracing,\n  })\n\n  await runStaticQueries({\n    queryIds,\n    store,\n    graphqlRunner,\n  })\n\n  await runPageQueries({\n    queryIds,\n    store,\n    graphqlRunner,\n  })\n\n  await getDataStore().ready()\n}\n"],"file":"queries.js"}