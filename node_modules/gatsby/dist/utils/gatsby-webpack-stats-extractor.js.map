{"version":3,"sources":["../../src/utils/gatsby-webpack-stats-extractor.ts"],"names":["GatsbyWebpackStatsExtractor","constructor","plugin","name","apply","compiler","hooks","done","tapAsync","stats","assets","assetsMap","childAssets","chunkGroup","compilation","chunkGroups","files","chunk","chunks","push","filter","f","slice","length","map","filename","rel","childChunkGroups","Object","entries","getChildrenByOrders","moduleGraph","chunkGraph","childFiles","childChunkGroup","webpackStats","toJson","all","assetsByChunkName","childAssetsByChunkName","fs","writeFile","path","join","JSON","stringify"],"mappings":"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","sourcesContent":["import fs from \"fs-extra\"\nimport path from \"path\"\nimport { Compiler } from \"webpack\"\n\nexport class GatsbyWebpackStatsExtractor {\n  private plugin: { name: string }\n  constructor() {\n    this.plugin = { name: `GatsbyWebpackStatsExtractor` }\n  }\n  apply(compiler: Compiler): void {\n    compiler.hooks.done.tapAsync(this.plugin.name, (stats, done) => {\n      const assets = {}\n      const assetsMap = {}\n      const childAssets = {}\n      for (const chunkGroup of stats.compilation.chunkGroups) {\n        if (chunkGroup.name) {\n          const files: Array<string> = []\n          for (const chunk of chunkGroup.chunks) {\n            files.push(...chunk.files)\n          }\n          assets[chunkGroup.name] = files.filter(f => f.slice(-4) !== `.map`)\n          assetsMap[chunkGroup.name] = files\n            .filter(\n              f =>\n                f.slice(-4) !== `.map` &&\n                f.slice(0, chunkGroup.name?.length) === chunkGroup.name\n            )\n            .map(filename => `/${filename}`)\n\n          for (const [rel, childChunkGroups] of Object.entries(\n            chunkGroup.getChildrenByOrders(\n              stats.compilation.moduleGraph,\n              stats.compilation.chunkGraph\n            )\n          )) {\n            if (!(chunkGroup.name in childAssets)) {\n              childAssets[chunkGroup.name] = {}\n            }\n\n            const childFiles: Array<string> = []\n            for (const childChunkGroup of childChunkGroups) {\n              for (const chunk of childChunkGroup.chunks) {\n                childFiles.push(...chunk.files)\n              }\n            }\n\n            childAssets[chunkGroup.name][rel] = childFiles\n          }\n        }\n      }\n\n      const webpackStats = {\n        ...stats.toJson({ all: false, chunkGroups: true }),\n        assetsByChunkName: assets,\n        childAssetsByChunkName: childAssets,\n      }\n      fs.writeFile(\n        path.join(`public`, `chunk-map.json`),\n        JSON.stringify(assetsMap),\n        () => {\n          fs.writeFile(\n            path.join(`public`, `webpack.stats.json`),\n            JSON.stringify(webpackStats),\n            done\n          )\n        }\n      )\n    })\n  }\n}\n"],"file":"gatsby-webpack-stats-extractor.js"}